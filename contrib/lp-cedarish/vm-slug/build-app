#!/bin/bash

sudo docker ps 2> /dev/null > /dev/null
[[ $? != 0 ]] && echo "cannot talk to docker." && exit 1

if [[ -z $1 ]] || [[ -z $2 ]] || [[ -z $3 ]]; then
  echo "Usage:  build git_url appname tenant_id"
  exit 1
fi

GIT=$1
shift
APP=$1
shift
TENANT=$1

[[ -f ./openrc ]] && . ./openrc
[[ -f ~/devstack/openrc ]] && . ~/devstack/openrc

nova list 2> /dev/null > /dev/null
if [ $? != 0 ]; then
  echo 'cannot talk to nova. check your openstack credentials'
  exit 1
fi

APP_DIR=/opt/solum/apps/$TENANT/$APP

mkdir -p $APP_DIR

[[ -d $APP_DIR/build ]] && rm -rf $APP_DIR/build
git clone $GIT $APP_DIR/build

cd $APP_DIR/build

echo '===> building App'

# Build the application slug
BUILD_ID=$(git archive master | sudo docker run -i -a stdin \
           -v /opt/solum/cache:/tmp/cache:rw  \
           -v /opt/solum/buildpacks:/tmp/buildpacks:rw  \
           solum/slugbuilder)

sudo docker attach $BUILD_ID

cd $APP_DIR
sudo docker cp $BUILD_ID:/tmp/slug.tgz $APP_DIR
sudo docker rm $BUILD_ID

rm -rf $APP_DIR/build

echo '===> Injecting App into Image'

[[ -f $APP_DIR/image.qcow2 ]] || cp /opt/solum/cedarish/image/cedarish.qcow2 $APP_DIR/image.qcow2
mkdir -p $APP_DIR/mnt
echo '-----> Mounting Image'
sudo guestmount -a $APP_DIR/image.qcow2 -i --rw $APP_DIR/mnt
sudo mkdir -p $APP_DIR/mnt/app
echo '-----> Injecting App'
sudo tar xzf $APP_DIR/slug.tgz -C $APP_DIR/mnt/app
sudo umount $APP_DIR/mnt
echo '-----> Done'

USER_DATA=$APP_DIR/user-data.txt
cat << EOF > $USER_DATA
#!/bin/bash

#export PORT=5000
export APP=web
useradd app || echo .
cd /app
HOME=/app foreman export upstart /etc/init
start app-web
EOF

echo '===> Interacting with Openstack'
### how do we run this ???
echo '-----> Adding Image to Glance'
glance image-delete $APP
glance image-create --name $APP --disk-format qcow2 --container-format bare --file $APP_DIR/image.qcow2


echo '-----> Adding Security Groups'

nova secgroup-create $APP "allow ssh/web to instance"
nova secgroup-add-rule $APP tcp 22 22 0.0.0.0/0
nova secgroup-add-rule $APP tcp 5000 5000 0.0.0.0/0

PRIV_KEY_PATH=$APP_DIR/key.priv
[[ `nova keypair-list | grep $APP | wc -l` == 0 ]] && nova keypair-add ${APP}_key > $PRIV_KEY_PATH
chmod 0600 $PRIV_KEY_PATH

echo modify ${DIR}/user-data.txt to set any needed ENV variables
echo boot your app like this
echo nova boot --flavor=2 --image=$APP --security-groups=${APP} \
               --key-name=${APP}_key --user-data=$USER_DATA ${APP}01
